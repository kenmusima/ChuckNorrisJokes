{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","data","subdata","isLoaded","fetch","then","res","json","setState","param","rest","this","className","map","dat","onClick","handleClick","console","log","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMA8DeA,E,kDAxDb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXC,KAAM,GACNC,QAAS,GACTC,UAAU,GALI,E,gEAQG,IAAD,OAClBC,MAAM,+CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACJ,EAAKC,SAAS,CACZL,UAAU,EACVF,KAAOM,S,kCAMHE,GAAQ,IAAD,OACjBL,MAAM,uDAAyDK,GAC5DJ,MAAK,SAAAK,GAAI,OAAIA,EAAKH,UAClBF,MAAK,SAAAE,GACJ,EAAKC,SAAS,CACZL,UAAU,EACVD,QAAUK,S,+BAKR,IAAD,SAC2BI,KAAKX,MAAjCG,EADC,EACDA,SAAUF,EADT,EACSA,KAAOC,EADhB,EACgBA,QAEvB,OAAIC,EAKA,qBAAKS,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACIX,EAAKY,KAAI,SAAAC,GAAG,OACV,yBAAQC,QAAS,kBAAM,EAAKC,YAAYF,IAAxC,UACGA,EADH,IACSG,QAAQC,IAAIJ,SAGzB,4BACCZ,EAAQiB,aAZR,iD,GApCKC,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a9b948ff.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      data: [],\n      subdata: [],\n      isLoaded: false,\n    }\n  }\n  componentDidMount() {\n    fetch('https://api.chucknorris.io/jokes/categories')\n      .then(res => res.json())\n      .then(json => {\n        this.setState({\n          isLoaded: true,\n          data : json,\n\n        })\n      });\n\n  }\n  handleClick(param) {\n    fetch('https://api.chucknorris.io/jokes/random?categories?=' + param)\n      .then(rest => rest.json())\n      .then(json => {\n        this.setState({\n          isLoaded: true,\n          subdata : json,\n        })\n      });\n    \n  }\n  render() {\n    var { isLoaded, data , subdata} = this.state;\n    //console.log(data)\n    if(!isLoaded){\n      return <div>Loading...</div>;\n    }\n    else {\n      return (\n        <div className=\"App\">\n          <div className=\"container\">\n            { data.map(dat => (\n                <button onClick={() => this.handleClick(dat)}>\n                  {dat} {console.log(dat)}\n                </button>\n              ))}\n            <p>\n            {subdata.value}\n            </p>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}